kind: Service
apiVersion: v1
metadata:
  name: nginx
  annotations:
    # ARN generated upon uploading certificate
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:iam::890953945913:server-certificate/my-nginx-cert"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
  labels:
    app: nginx
spec:
  ports:
    - port: 443        # Incoming port on the AWS ELB
      targetPort: 80   # targetPort on the backend pods
      protocol: TCP
      name: https
  selector:
    app: nginx
    tier: frontend
  type: LoadBalancer   # Provision a cloud LB by setting the spec.type to LoadBalancer

---
kind: Deployment  
apiVersion: apps/v1
metadata:
  name: nginx
  labels:
    tier: frontend
    app:  nginx
  annotations:
    description: A stateless Nginx Pod deployment
spec:
  replicas: 4            # The desired number of Pods
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  minReadySeconds: 0
  progressDeadlineSeconds: 600

  selector:              # The spec.selector is used by this Deployment to identify the Pods its managing
    matchLabels:         # The spec.selector.matchLabels must match one of the labels in spec.template.metadata.labels
      tier: frontend
      app: nginx

  template:
    metadata:
      labels:
        tier: frontend   # Labels must be assigned to the Pod controlled by a Deployment and targeted by a service.
        app:  nginx      # Make sure to not overlap these labels with any other Pods or Controllers.
    spec:
      volumes:
        - name: www-data-share
          emptyDir: {}
      containers:
        - name: nginx
          image: nginx:1.13.8
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: www-data-share
              readOnly: true
          readinessProbe:       # Setup readiness probes to enable the service to track which pods are ready.
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          ports:
            - containerPort: 80

        - name: git-sync
          image: openweb/git-sync:0.0.1
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: www-data-share
          env:
            - name: GIT_SYNC_REPO
              value: "https://github.com/naveenjoy/naveenjoy.github.io.git"
            - name: GIT_SYNC_DEST
              value: "/usr/share/nginx/html"
            - name: GIT_SYNC_BRANCH
              value: "master"
            - name: GIT_SYNC_REV
              value: "FETCH_HEAD"
            - name: GIT_SYNC_WAIT
              value: "10"